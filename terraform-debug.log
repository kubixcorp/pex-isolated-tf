[0m[1mdata.aws_elb_service_account.main: Reading...[0m[0m
[0m[1mdata.aws_elb_service_account.main: Read complete after 0s [id=127311923021][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # aws_ec2_transit_gateway.oregon[0m will be created
[0m  [32m+[0m[0m resource "aws_ec2_transit_gateway" "oregon" {
      [32m+[0m[0m amazon_side_asn                    = 64512
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m association_default_route_table_id = (known after apply)
      [32m+[0m[0m auto_accept_shared_attachments     = "disable"
      [32m+[0m[0m default_route_table_association    = "enable"
      [32m+[0m[0m default_route_table_propagation    = "enable"
      [32m+[0m[0m description                        = "Transit Gateway for Oregon region"
      [32m+[0m[0m dns_support                        = "enable"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m multicast_support                  = "disable"
      [32m+[0m[0m owner_id                           = (known after apply)
      [32m+[0m[0m propagation_default_route_table_id = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "transit-gateway-oregon"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "transit-gateway-oregon"
        }
      [32m+[0m[0m vpn_ecmp_support                   = "enable"
    }

[1m  # aws_ec2_transit_gateway.virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_ec2_transit_gateway" "virginia" {
      [32m+[0m[0m amazon_side_asn                    = 64512
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m association_default_route_table_id = (known after apply)
      [32m+[0m[0m auto_accept_shared_attachments     = "disable"
      [32m+[0m[0m default_route_table_association    = "enable"
      [32m+[0m[0m default_route_table_propagation    = "enable"
      [32m+[0m[0m description                        = "Transit Gateway for Virginia region"
      [32m+[0m[0m dns_support                        = "enable"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m multicast_support                  = "disable"
      [32m+[0m[0m owner_id                           = (known after apply)
      [32m+[0m[0m propagation_default_route_table_id = (known after apply)
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "transit-gateway-virginia"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "transit-gateway-virginia"
        }
      [32m+[0m[0m vpn_ecmp_support                   = "enable"
    }

[1m  # aws_ecs_cluster.ecs_cluster_virginia[0][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_cluster" "ecs_cluster_virginia" {
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m capacity_providers = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "prod-ecs-cluster-virginia-1"
      [32m+[0m[0m tags_all           = (known after apply)
    }

[1m  # aws_ecs_cluster.ecs_cluster_virginia[1][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_cluster" "ecs_cluster_virginia" {
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m capacity_providers = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m name               = "prod-ecs-cluster-virginia-2"
      [32m+[0m[0m tags_all           = (known after apply)
    }

[1m  # aws_ecs_service.ecs_service_virginia[0][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-1"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[1][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-2"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[2][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-3"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[3][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-4"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[4][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-5"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[5][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-6"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[6][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-7"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[7][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-8"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[8][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-9"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[9][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-10"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[10][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-11"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[11][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-12"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[12][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-13"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[13][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-14"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[14][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-15"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_service.ecs_service_virginia[15][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_service" "ecs_service_virginia" {
      [32m+[0m[0m cluster                            = (known after apply)
      [32m+[0m[0m deployment_maximum_percent         = 200
      [32m+[0m[0m deployment_minimum_healthy_percent = 100
      [32m+[0m[0m desired_count                      = 2
      [32m+[0m[0m enable_ecs_managed_tags            = false
      [32m+[0m[0m enable_execute_command             = false
      [32m+[0m[0m iam_role                           = (known after apply)
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m launch_type                        = "FARGATE"
      [32m+[0m[0m name                               = "prod-ecs-service-virginia-16"
      [32m+[0m[0m platform_version                   = (known after apply)
      [32m+[0m[0m scheduling_strategy                = "REPLICA"
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m task_definition                    = (known after apply)
      [32m+[0m[0m triggers                           = (known after apply)
      [32m+[0m[0m wait_for_steady_state              = false

      [32m+[0m[0m load_balancer {
          [32m+[0m[0m container_name   = "app"
          [32m+[0m[0m container_port   = 80
          [32m+[0m[0m target_group_arn = (known after apply)
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [32m+[0m[0m network_configuration {
          [32m+[0m[0m assign_public_ip = true
          [32m+[0m[0m security_groups  = (known after apply)
          [32m+[0m[0m subnets          = [
              [32m+[0m[0m "10.0.3.0/24",
              [32m+[0m[0m "10.0.4.0/24",
            ]
        }
    }

[1m  # aws_ecs_task_definition.task_def_virginia[0][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-1"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[1][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-2"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[2][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-3"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[3][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-4"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[4][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-5"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[5][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-6"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[6][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-7"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[7][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-8"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[8][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-9"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[9][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-10"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[10][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-11"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[11][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-12"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[12][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-13"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[13][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-14"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[14][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-15"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_ecs_task_definition.task_def_virginia[15][0m will be created
[0m  [32m+[0m[0m resource "aws_ecs_task_definition" "task_def_virginia" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m arn_without_revision     = (known after apply)
      [32m+[0m[0m container_definitions    = jsonencode(
            [
              [32m+[0m[0m {
                  [32m+[0m[0m image        = "nginx"
                  [32m+[0m[0m name         = "app"
                  [32m+[0m[0m portMappings = [
                      [32m+[0m[0m {
                          [32m+[0m[0m containerPort = 80
                          [32m+[0m[0m hostPort      = 80
                          [32m+[0m[0m protocol      = "tcp"
                        },
                    ]
                },
            ]
        )
      [32m+[0m[0m cpu                      = "256"
      [32m+[0m[0m execution_role_arn       = (known after apply)
      [32m+[0m[0m family                   = "prod-task-def-16"
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m memory                   = "512"
      [32m+[0m[0m network_mode             = "awsvpc"
      [32m+[0m[0m requires_compatibilities = [
          [32m+[0m[0m "FARGATE",
        ]
      [32m+[0m[0m revision                 = (known after apply)
      [32m+[0m[0m skip_destroy             = false
      [32m+[0m[0m tags_all                 = (known after apply)
      [32m+[0m[0m task_role_arn            = (known after apply)
    }

[1m  # aws_iam_instance_profile.ssm_instance_profile[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "ssm_instance_profile" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "my_ssm_instance_profile"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "ssm_role"
      [32m+[0m[0m tags_all    = (known after apply)
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # aws_iam_role.ecs_task_execution_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ecs_task_execution_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "ecsTaskExecutionRole"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m role_last_used        = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # aws_iam_role.ecs_task_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ecs_task_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ecs-tasks.amazonaws.com"
                        }
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "ecsTaskRole"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m role_last_used        = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # aws_iam_role.ssm_role[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ssm_role" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "AllowEC2AssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "ssm_role"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m role_last_used        = (known after apply)
      [32m+[0m[0m tags_all              = (known after apply)
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # aws_iam_role_policy.ecs_task_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy" "ecs_task_policy" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m name   = "ecsTaskPolicy"
      [32m+[0m[0m policy = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action   = [
                          [32m+[0m[0m "ecs:DescribeClusters",
                          [32m+[0m[0m "ecs:DescribeTasks",
                          [32m+[0m[0m "ecs:ListTasks",
                          [32m+[0m[0m "logs:CreateLogStream",
                          [32m+[0m[0m "logs:PutLogEvents",
                        ]
                      [32m+[0m[0m Effect   = "Allow"
                      [32m+[0m[0m Resource = "*"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m role   = (known after apply)
    }

[1m  # aws_iam_role_policy_attachment.ecs_task_execution_role_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ecs_task_execution_role_policy" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      [32m+[0m[0m role       = "ecsTaskExecutionRole"
    }

[1m  # aws_iam_role_policy_attachment.ssm_attach[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "ssm_attach" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      [32m+[0m[0m role       = "ssm_role"
    }

[1m  # aws_instance.bastion_oregon[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "bastion_oregon" {
      [32m+[0m[0m ami                                  = "ami-0676a735c5f8e67c4"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "my_ssm_instance_profile"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "BaseKeyAcces"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Bastion Oregon"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Bastion Oregon"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "cdab662636ac4ec2121657a5ee540a4302865e33"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_instance.bastion_virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "bastion_virginia" {
      [32m+[0m[0m ami                                  = "ami-04e8b3e527208c8cf"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = "my_ssm_instance_profile"
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.micro"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "BaseKeyAcces"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "Bastion Virginia"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "Bastion Virginia"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = "cdab662636ac4ec2121657a5ee540a4302865e33"
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # aws_lb.app_lb_virginia[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "app_lb_virginia" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = false
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = "prod-app-lb-virginia-1"
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = (known after apply)
      [32m+[0m[0m tags_all                                    = (known after apply)
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)
    }

[1m  # aws_lb.app_lb_virginia[1][0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "app_lb_virginia" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = false
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = "prod-app-lb-virginia-2"
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = (known after apply)
      [32m+[0m[0m tags_all                                    = (known after apply)
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)
    }

[1m  # aws_lb_listener.https_listener_virginia[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "https_listener_virginia" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m certificate_arn   = "arn:aws:acm:us-east-1:993407081893:certificate/e3109390-1044-48fe-9078-fc7b519ff5aa"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 443
      [32m+[0m[0m protocol          = "HTTPS"
      [32m+[0m[0m ssl_policy        = "ELBSecurityPolicy-TLS-1-2-2017-01"
      [32m+[0m[0m tags_all          = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # aws_lb_listener.https_listener_virginia[1][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "https_listener_virginia" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m certificate_arn   = "arn:aws:acm:us-east-1:993407081893:certificate/e3109390-1044-48fe-9078-fc7b519ff5aa"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 443
      [32m+[0m[0m protocol          = "HTTPS"
      [32m+[0m[0m ssl_policy        = "ELBSecurityPolicy-TLS-1-2-2017-01"
      [32m+[0m[0m tags_all          = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # aws_lb_target_group.app_tg_virginia[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "app_tg_virginia" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "prod-app-tg-virginia1"
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)
    }

[1m  # aws_lb_target_group.app_tg_virginia[1][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "app_tg_virginia" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "prod-app-tg-virginia2"
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)
    }

[1m  # aws_s3_bucket.alb_logs_oregon[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "alb_logs_oregon" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "alb-logs-isolated-oregon"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = true
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "Name" = "ALB Logs Bucket Oregon"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "Name" = "ALB Logs Bucket Oregon"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)
    }

[1m  # aws_s3_bucket.alb_logs_virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "alb_logs_virginia" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "alb-logs-isolated-virginia"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = true
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = (known after apply)
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "Name" = "ALB Logs Bucket Virginia"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "Name" = "ALB Logs Bucket Virginia"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)
    }

[1m  # aws_s3_bucket_policy.alb_logs_oregon_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "alb_logs_oregon_policy" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m policy = (known after apply)
    }

[1m  # aws_s3_bucket_policy.alb_logs_virginia_policy[0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_policy" "alb_logs_virginia_policy" {
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m policy = (known after apply)
    }

[1m  # aws_security_group.alb_sg_oregon[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "alb_sg_oregon" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "ALB Security Group Oregon"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "alb_sg_oregon"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "ALB Security Group Oregon"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "ALB Security Group Oregon"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.alb_sg_virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "alb_sg_virginia" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "ALB Security Group Virginia"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "alb_sg_virginia"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "ALB Security Group Virginia"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "ALB Security Group Virginia"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.bastion_sg_oregon[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bastion_sg_oregon" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Allow SSH traffic"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "oregon_sg_virginia"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Bastion SG Oregon"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "Bastion SG Oregon"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.bastion_sg_virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "bastion_sg_virginia" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Allow SSH traffic"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "bastion_sg_virginia"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "Bastion SG Virginia"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "Bastion SG Virginia"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_security_group.lb_sg_virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "lb_sg_virginia" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 443
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m name                   = "prod-lb-sg-virginia"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # aws_wafv2_ip_set.allowed_ips_oregon[0m will be created
[0m  [32m+[0m[0m resource "aws_wafv2_ip_set" "allowed_ips_oregon" {
      [32m+[0m[0m addresses          = [
          [32m+[0m[0m "179.60.173.0/32",
          [32m+[0m[0m "203.0.113.0/24",
        ]
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m ip_address_version = "IPV4"
      [32m+[0m[0m lock_token         = (known after apply)
      [32m+[0m[0m name               = "allowed-ips-oregon"
      [32m+[0m[0m scope              = "REGIONAL"
      [32m+[0m[0m tags_all           = (known after apply)
    }

[1m  # aws_wafv2_ip_set.allowed_ips_virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_wafv2_ip_set" "allowed_ips_virginia" {
      [32m+[0m[0m addresses          = [
          [32m+[0m[0m "179.60.173.0/32",
          [32m+[0m[0m "203.0.113.0/24",
        ]
      [32m+[0m[0m arn                = (known after apply)
      [32m+[0m[0m id                 = (known after apply)
      [32m+[0m[0m ip_address_version = "IPV4"
      [32m+[0m[0m lock_token         = (known after apply)
      [32m+[0m[0m name               = "allowed-ips-virginia"
      [32m+[0m[0m scope              = "REGIONAL"
      [32m+[0m[0m tags_all           = (known after apply)
    }

[1m  # aws_wafv2_web_acl.web_acl_oregon[0m will be created
[0m  [32m+[0m[0m resource "aws_wafv2_web_acl" "web_acl_oregon" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m capacity    = (known after apply)
      [32m+[0m[0m description = "Web ACL to allow specific IPs"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m lock_token  = (known after apply)
      [32m+[0m[0m name        = "alb-web-acl-oregon"
      [32m+[0m[0m scope       = "REGIONAL"
      [32m+[0m[0m tags_all    = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m block {
            }
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m name     = "allow-specific-ips-oregon"
          [32m+[0m[0m priority = 1

          [32m+[0m[0m action {
              [32m+[0m[0m allow {
                }
            }

          [32m+[0m[0m statement {
              [32m+[0m[0m ip_set_reference_statement {
                  [32m+[0m[0m arn = (known after apply)
                }
            }

          [32m+[0m[0m visibility_config {
              [32m+[0m[0m cloudwatch_metrics_enabled = true
              [32m+[0m[0m metric_name                = "allow-specific-ips-oregon"
              [32m+[0m[0m sampled_requests_enabled   = true
            }
        }

      [32m+[0m[0m visibility_config {
          [32m+[0m[0m cloudwatch_metrics_enabled = true
          [32m+[0m[0m metric_name                = "web-acl-metrics-oregon"
          [32m+[0m[0m sampled_requests_enabled   = true
        }
    }

[1m  # aws_wafv2_web_acl.web_acl_virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_wafv2_web_acl" "web_acl_virginia" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m capacity    = (known after apply)
      [32m+[0m[0m description = "Web ACL to allow specific IPs"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m lock_token  = (known after apply)
      [32m+[0m[0m name        = "alb-web-acl-virginia"
      [32m+[0m[0m scope       = "REGIONAL"
      [32m+[0m[0m tags_all    = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m block {
            }
        }

      [32m+[0m[0m rule {
          [32m+[0m[0m name     = "allow-specific-ips-virginia"
          [32m+[0m[0m priority = 1

          [32m+[0m[0m action {
              [32m+[0m[0m allow {
                }
            }

          [32m+[0m[0m statement {
              [32m+[0m[0m ip_set_reference_statement {
                  [32m+[0m[0m arn = (known after apply)
                }
            }

          [32m+[0m[0m visibility_config {
              [32m+[0m[0m cloudwatch_metrics_enabled = true
              [32m+[0m[0m metric_name                = "allow-specific-ips-virginia"
              [32m+[0m[0m sampled_requests_enabled   = true
            }
        }

      [32m+[0m[0m visibility_config {
          [32m+[0m[0m cloudwatch_metrics_enabled = true
          [32m+[0m[0m metric_name                = "web-acl-metrics-virginia"
          [32m+[0m[0m sampled_requests_enabled   = true
        }
    }

[1m  # aws_wafv2_web_acl_association.web_acl_association_oregon[0m will be created
[0m  [32m+[0m[0m resource "aws_wafv2_web_acl_association" "web_acl_association_oregon" {
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m resource_arn = (known after apply)
      [32m+[0m[0m web_acl_arn  = (known after apply)
    }

[1m  # aws_wafv2_web_acl_association.web_acl_association_virginia[0m will be created
[0m  [32m+[0m[0m resource "aws_wafv2_web_acl_association" "web_acl_association_virginia" {
      [32m+[0m[0m id           = (known after apply)
      [32m+[0m[0m resource_arn = (known after apply)
      [32m+[0m[0m web_acl_arn  = (known after apply)
    }

[1m  # time_sleep.wait_30_seconds[0m will be created
[0m  [32m+[0m[0m resource "time_sleep" "wait_30_seconds" {
      [32m+[0m[0m create_duration = "30s"
      [32m+[0m[0m id              = (known after apply)
    }

[1m  # module.alb_oregon.aws_lb.this[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "this" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = false
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = "alb-oregon"
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = (known after apply)
      [32m+[0m[0m tags                                        = {
          [32m+[0m[0m "Name" = "ALB Oregon"
        }
      [32m+[0m[0m tags_all                                    = {
          [32m+[0m[0m "Name" = "ALB Oregon"
        }
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)

      [32m+[0m[0m access_logs {
          [32m+[0m[0m enabled = false
            [90m# (1 unchanged attribute hidden)[0m[0m
        }
    }

[1m  # module.alb_oregon.aws_lb_listener.https[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "https" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m certificate_arn   = "arn:aws:acm:us-west-2:993407081893:certificate/dba99dd9-7251-45e5-af91-97ea58552dcd"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 443
      [32m+[0m[0m protocol          = "HTTPS"
      [32m+[0m[0m ssl_policy        = "ELBSecurityPolicy-TLS-1-2-2017-01"
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Name" = "https"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Name" = "https"
        }

      [32m+[0m[0m default_action {
          [32m+[0m[0m order = (known after apply)
          [32m+[0m[0m type  = "fixed-response"

          [32m+[0m[0m fixed_response {
              [32m+[0m[0m content_type = "text/plain"
              [32m+[0m[0m message_body = "Not Found"
              [32m+[0m[0m status_code  = "404"
            }
        }
    }

[1m  # module.alb_oregon.aws_lb_target_group.this[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "this" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "tg-oregon"
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "ALB Oregon"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "ALB Oregon"
        }
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = "200-399"
          [32m+[0m[0m path                = "/"
          [32m+[0m[0m port                = "traffic-port"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 5
          [32m+[0m[0m unhealthy_threshold = 2
        }
    }

[1m  # module.alb_virginia.aws_lb.this[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "this" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = false
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = "alb-virginia"
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = (known after apply)
      [32m+[0m[0m tags                                        = {
          [32m+[0m[0m "Name" = "ALB Virginia"
        }
      [32m+[0m[0m tags_all                                    = {
          [32m+[0m[0m "Name" = "ALB Virginia"
        }
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)

      [32m+[0m[0m access_logs {
          [32m+[0m[0m bucket  = "alb-logs-isolated-virginia"
          [32m+[0m[0m enabled = true
        }
    }

[1m  # module.alb_virginia.aws_lb_listener.https[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "https" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m certificate_arn   = "arn:aws:acm:us-east-1:993407081893:certificate/e3109390-1044-48fe-9078-fc7b519ff5aa"
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 443
      [32m+[0m[0m protocol          = "HTTPS"
      [32m+[0m[0m ssl_policy        = "ELBSecurityPolicy-TLS-1-2-2017-01"
      [32m+[0m[0m tags              = {
          [32m+[0m[0m "Name" = "https"
        }
      [32m+[0m[0m tags_all          = {
          [32m+[0m[0m "Name" = "https"
        }

      [32m+[0m[0m default_action {
          [32m+[0m[0m order = (known after apply)
          [32m+[0m[0m type  = "fixed-response"

          [32m+[0m[0m fixed_response {
              [32m+[0m[0m content_type = "text/plain"
              [32m+[0m[0m message_body = "Not Found"
              [32m+[0m[0m status_code  = "404"
            }
        }
    }

[1m  # module.alb_virginia.aws_lb_target_group.this[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "this" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "tg-virginia"
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "Name" = "ALB Virginia"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "Name" = "ALB Virginia"
        }
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)

      [32m+[0m[0m health_check {
          [32m+[0m[0m enabled             = true
          [32m+[0m[0m healthy_threshold   = 2
          [32m+[0m[0m interval            = 30
          [32m+[0m[0m matcher             = "200-399"
          [32m+[0m[0m path                = "/"
          [32m+[0m[0m port                = "traffic-port"
          [32m+[0m[0m protocol            = "HTTP"
          [32m+[0m[0m timeout             = 5
          [32m+[0m[0m unhealthy_threshold = 2
        }
    }

[1m  # module.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this[0m will be created
[0m  [32m+[0m[0m resource "aws_ec2_transit_gateway_vpc_attachment" "this" {
      [32m+[0m[0m appliance_mode_support                          = "disable"
      [32m+[0m[0m dns_support                                     = "enable"
      [32m+[0m[0m id                                              = (known after apply)
      [32m+[0m[0m ipv6_support                                    = "disable"
      [32m+[0m[0m subnet_ids                                      = (known after apply)
      [32m+[0m[0m tags                                            = {
          [32m+[0m[0m "Name" = "transit-gateway-attachment"
        }
      [32m+[0m[0m tags_all                                        = {
          [32m+[0m[0m "Name" = "transit-gateway-attachment"
        }
      [32m+[0m[0m transit_gateway_default_route_table_association = true
      [32m+[0m[0m transit_gateway_default_route_table_propagation = true
      [32m+[0m[0m transit_gateway_id                              = (known after apply)
      [32m+[0m[0m vpc_id                                          = (known after apply)
      [32m+[0m[0m vpc_owner_id                                    = (known after apply)
    }

[1m  # module.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this[0m will be created
[0m  [32m+[0m[0m resource "aws_ec2_transit_gateway_vpc_attachment" "this" {
      [32m+[0m[0m appliance_mode_support                          = "disable"
      [32m+[0m[0m dns_support                                     = "enable"
      [32m+[0m[0m id                                              = (known after apply)
      [32m+[0m[0m ipv6_support                                    = "disable"
      [32m+[0m[0m subnet_ids                                      = (known after apply)
      [32m+[0m[0m tags                                            = {
          [32m+[0m[0m "Name" = "transit-gateway-attachment"
        }
      [32m+[0m[0m tags_all                                        = {
          [32m+[0m[0m "Name" = "transit-gateway-attachment"
        }
      [32m+[0m[0m transit_gateway_default_route_table_association = true
      [32m+[0m[0m transit_gateway_default_route_table_propagation = true
      [32m+[0m[0m transit_gateway_id                              = (known after apply)
      [32m+[0m[0m vpc_id                                          = (known after apply)
      [32m+[0m[0m vpc_owner_id                                    = (known after apply)
    }

[1m  # module.vpc_oregon.aws_eip.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name" = "us-west-2-nat-eip"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name" = "us-west-2-nat-eip"
        }
      [32m+[0m[0m vpc                  = true
    }

[1m  # module.vpc_oregon.aws_internet_gateway.this[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "igw-us-west-2"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "igw-us-west-2"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc_oregon.aws_nat_gateway.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m connectivity_type    = "public"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m network_interface_id = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m subnet_id            = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name" = "us-west-2-nat-gateway"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name" = "us-west-2-nat-gateway"
        }
    }

[1m  # module.vpc_oregon.aws_route_table.private[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m nat_gateway_id             = (known after apply)
                [90m# (12 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "private-rt-us-west-2"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "private-rt-us-west-2"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_oregon.aws_route_table.public[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m gateway_id                 = (known after apply)
                [90m# (12 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "public-rt-us-west-2"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "public-rt-us-west-2"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_oregon.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_oregon.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_oregon.aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_oregon.aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_oregon.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-west-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "private-0-us-west-2"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "private-0-us-west-2"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_oregon.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-west-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.4.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "private-1-us-west-2"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "private-1-us-west-2"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_oregon.aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-west-2a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "public-0-us-west-2"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "public-0-us-west-2"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_oregon.aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-west-2b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.1.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "public-1-us-west-2"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "public-1-us-west-2"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_oregon.aws_vpc.this[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.1.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_classiclink                   = (known after apply)
      [32m+[0m[0m enable_classiclink_dns_support       = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "vpc-us-west-2"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "vpc-us-west-2"
        }
    }

[1m  # module.vpc_virginia.aws_eip.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name" = "us-east-1-nat-eip"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name" = "us-east-1-nat-eip"
        }
      [32m+[0m[0m vpc                  = true
    }

[1m  # module.vpc_virginia.aws_internet_gateway.this[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "this" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Name" = "igw-us-east-1"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Name" = "igw-us-east-1"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.vpc_virginia.aws_nat_gateway.nat[0][0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "nat" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m connectivity_type    = "public"
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m network_interface_id = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m subnet_id            = (known after apply)
      [32m+[0m[0m tags                 = {
          [32m+[0m[0m "Name" = "us-east-1-nat-gateway"
        }
      [32m+[0m[0m tags_all             = {
          [32m+[0m[0m "Name" = "us-east-1-nat-gateway"
        }
    }

[1m  # module.vpc_virginia.aws_route_table.private[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "private" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m nat_gateway_id             = (known after apply)
                [90m# (12 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "private-rt-us-east-1"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "private-rt-us-east-1"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_virginia.aws_route_table.public[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m gateway_id                 = (known after apply)
                [90m# (12 unchanged attributes hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "public-rt-us-east-1"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "public-rt-us-east-1"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.vpc_virginia.aws_route_table_association.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_virginia.aws_route_table_association.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "private" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_virginia.aws_route_table_association.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_virginia.aws_route_table_association.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.vpc_virginia.aws_subnet.private[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "private-0-us-east-1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "private-0-us-east-1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_virginia.aws_subnet.private[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.4.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "private-1-us-east-1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "private-1-us-east-1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_virginia.aws_subnet.public[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "public-0-us-east-1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "public-0-us-east-1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_virginia.aws_subnet.public[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "public-1-us-east-1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "public-1-us-east-1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.vpc_virginia.aws_vpc.this[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "this" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_classiclink                   = (known after apply)
      [32m+[0m[0m enable_classiclink_dns_support       = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "vpc-us-east-1"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "vpc-us-east-1"
        }
    }

[1mPlan:[0m 103 to add, 0 to change, 0 to destroy.
[0m
Changes to Outputs:
  [32m+[0m[0m alb_oregon_dns_name            = (known after apply)
  [32m+[0m[0m alb_virginia_dns_name          = (known after apply)
  [32m+[0m[0m instance_info_bastion_oregon   = (known after apply)
  [32m+[0m[0m instance_info_bastion_virginia = (known after apply)
  [32m+[0m[0m task_execution_role_arn        = (known after apply)
  [32m+[0m[0m task_role_arn                  = (known after apply)
[0m[1maws_wafv2_ip_set.allowed_ips_oregon: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_vpc.this: Creating...[0m[0m
[0m[1maws_ec2_transit_gateway.oregon: Creating...[0m[0m
[0m[1maws_s3_bucket.alb_logs_oregon: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_eip.nat[0]: Creating...[0m[0m
[0m[1maws_wafv2_ip_set.allowed_ips_oregon: Creation complete after 2s [id=f21742d8-8682-4f44-8c79-d504a186d4e3][0m
[0m[1maws_iam_role.ecs_task_execution_role: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_eip.nat[0]: Creation complete after 2s [id=eipalloc-02929e9b663204867][0m
[0m[1maws_ec2_transit_gateway.virginia: Creating...[0m[0m
[0m[1maws_iam_role.ecs_task_execution_role: Creation complete after 2s [id=ecsTaskExecutionRole][0m
[0m[1maws_ecs_cluster.ecs_cluster_virginia[0]: Creating...[0m[0m
[0m[1maws_s3_bucket.alb_logs_oregon: Creation complete after 5s [id=alb-logs-isolated-oregon][0m
[0m[1maws_ecs_cluster.ecs_cluster_virginia[1]: Creating...[0m[0m
[0m[1maws_ec2_transit_gateway.oregon: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_vpc.this: Still creating... [10s elapsed][0m[0m
[0m[1maws_ec2_transit_gateway.virginia: Still creating... [10s elapsed][0m[0m
[0m[1maws_ecs_cluster.ecs_cluster_virginia[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_vpc.this: Creation complete after 14s [id=vpc-0ccdbbf686b2973a4][0m
[0m[1maws_wafv2_ip_set.allowed_ips_virginia: Creating...[0m[0m
[0m[1maws_wafv2_ip_set.allowed_ips_virginia: Creation complete after 1s [id=2f9cc647-882c-47a3-931d-266125752ea2][0m
[0m[1maws_iam_role.ssm_role: Creating...[0m[0m
[0m[1maws_ecs_cluster.ecs_cluster_virginia[1]: Still creating... [10s elapsed][0m[0m
[0m[1maws_iam_role.ssm_role: Creation complete after 1s [id=ssm_role][0m
[0m[1maws_iam_role.ecs_task_role: Creating...[0m[0m
[0m[1maws_ecs_cluster.ecs_cluster_virginia[0]: Creation complete after 12s [id=arn:aws:ecs:us-east-1:993407081893:cluster/prod-ecs-cluster-virginia-1][0m
[0m[1mmodule.vpc_virginia.aws_vpc.this: Creating...[0m[0m
[0m[1maws_ecs_cluster.ecs_cluster_virginia[1]: Creation complete after 11s [id=arn:aws:ecs:us-east-1:993407081893:cluster/prod-ecs-cluster-virginia-2][0m
[0m[1maws_s3_bucket.alb_logs_virginia: Creating...[0m[0m
[0m[1maws_iam_role.ecs_task_role: Creation complete after 1s [id=ecsTaskRole][0m
[0m[1mmodule.vpc_virginia.aws_eip.nat[0]: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_eip.nat[0]: Creation complete after 1s [id=eipalloc-0a1ee62bd3e0be002][0m
[0m[1maws_s3_bucket.alb_logs_virginia: Creation complete after 3s [id=alb-logs-isolated-virginia][0m
[0m[1maws_wafv2_web_acl.web_acl_oregon: Creating...[0m[0m
[0m[1maws_iam_role_policy_attachment.ecs_task_execution_role_policy: Creating...[0m[0m
[0m[1maws_iam_role_policy_attachment.ecs_task_execution_role_policy: Creation complete after 1s [id=ecsTaskExecutionRole-20240628174350491300000001][0m
[0m[1maws_s3_bucket_policy.alb_logs_oregon_policy: Creating...[0m[0m
[0m[1maws_wafv2_web_acl.web_acl_oregon: Creation complete after 1s [id=ce3d02e2-281d-4632-b2ea-10778f628698][0m
[0m[1mmodule.vpc_oregon.aws_subnet.private[1]: Creating...[0m[0m
[0m[1maws_ec2_transit_gateway.oregon: Still creating... [20s elapsed][0m[0m
[0m[1maws_s3_bucket_policy.alb_logs_oregon_policy: Creation complete after 0s [id=alb-logs-isolated-oregon][0m
[0m[1mmodule.vpc_oregon.aws_subnet.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_subnet.private[1]: Creation complete after 1s [id=subnet-0f365667a40c5ebe7][0m
[0m[1mmodule.vpc_oregon.aws_subnet.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_subnet.private[0]: Creation complete after 1s [id=subnet-0c9f69868a5621857][0m
[0m[1mmodule.vpc_oregon.aws_internet_gateway.this: Creating...[0m[0m
[0m[1maws_ec2_transit_gateway.virginia: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_internet_gateway.this: Creation complete after 1s [id=igw-01e79e550e9db92b0][0m
[0m[1mmodule.vpc_oregon.aws_subnet.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_vpc.this: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_vpc.this: Creation complete after 13s [id=vpc-0d99a0b7fe7194535][0m
[0m[1maws_ec2_transit_gateway.oregon: Still creating... [30s elapsed][0m[0m
[0m[1maws_wafv2_web_acl.web_acl_virginia: Creating...[0m[0m
[0m[1maws_wafv2_web_acl.web_acl_virginia: Creation complete after 1s [id=5de043cf-1da5-42fe-b0ff-68fdbe88c2fb][0m
[0m[1maws_iam_instance_profile.ssm_instance_profile: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_subnet.public[0]: Still creating... [10s elapsed][0m[0m
[0m[1maws_iam_instance_profile.ssm_instance_profile: Creation complete after 1s [id=my_ssm_instance_profile][0m
[0m[1maws_iam_role_policy_attachment.ssm_attach: Creating...[0m[0m
[0m[1maws_iam_role_policy_attachment.ssm_attach: Creation complete after 0s [id=ssm_role-20240628174402894900000002][0m
[0m[1maws_ec2_transit_gateway.virginia: Still creating... [30s elapsed][0m[0m
[0m[1mtime_sleep.wait_30_seconds: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_subnet.public[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_subnet.public[0]: Creation complete after 12s [id=subnet-02be31f95fe57abfa][0m
[0m[1maws_iam_role_policy.ecs_task_policy: Creating...[0m[0m
[0m[1maws_iam_role_policy.ecs_task_policy: Creation complete after 0s [id=ecsTaskRole:ecsTaskPolicy][0m
[0m[1maws_s3_bucket_policy.alb_logs_virginia_policy: Creating...[0m[0m
[0m[1maws_s3_bucket_policy.alb_logs_virginia_policy: Creation complete after 0s [id=alb-logs-isolated-virginia][0m
[0m[1maws_security_group.bastion_sg_oregon: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_subnet.public[1]: Creation complete after 12s [id=subnet-0d58559e733bb1ab7][0m
[0m[1maws_security_group.alb_sg_oregon: Creating...[0m[0m
[0m[1maws_ec2_transit_gateway.oregon: Creation complete after 36s [id=tgw-0a36370b256b1be4e][0m
[0m[1mmodule.vpc_oregon.aws_route_table.public: Creating...[0m[0m
[0m[1maws_security_group.alb_sg_oregon: Creation complete after 3s [id=sg-036fd018f03c2c581][0m
[0m[1mmodule.vpc_virginia.aws_subnet.public[1]: Creating...[0m[0m
[0m[1maws_security_group.bastion_sg_oregon: Creation complete after 3s [id=sg-039e5c9c145382fe7][0m
[0m[1mmodule.vpc_virginia.aws_subnet.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_route_table.public: Creation complete after 2s [id=rtb-0509bba20adbba49d][0m
[0m[1mmodule.vpc_virginia.aws_subnet.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_subnet.private[1]: Creation complete after 1s [id=subnet-00c559405580970a0][0m
[0m[1mmodule.vpc_virginia.aws_subnet.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_subnet.private[0]: Creation complete after 1s [id=subnet-01a126936120e8ae0][0m
[0m[1mmodule.vpc_virginia.aws_internet_gateway.this: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_internet_gateway.this: Creation complete after 1s [id=igw-0c59a1c15725d35f1][0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Creating...[0m[0m
[0m[1maws_ec2_transit_gateway.virginia: Still creating... [40s elapsed][0m[0m
[0m[1mtime_sleep.wait_30_seconds: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_subnet.public[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_subnet.public[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_subnet.public[1]: Creation complete after 11s [id=subnet-081d19532f12cfbf6][0m
[0m[1maws_security_group.bastion_sg_virginia: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_subnet.public[0]: Creation complete after 11s [id=subnet-03ef4eb4409ffda22][0m
[0m[1maws_security_group.alb_sg_virginia: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Still creating... [10s elapsed][0m[0m
[0m[1maws_security_group.bastion_sg_virginia: Creation complete after 4s [id=sg-0691e974bc9a509b1][0m
[0m[1maws_security_group.lb_sg_virginia: Creating...[0m[0m
[0m[1maws_ec2_transit_gateway.virginia: Still creating... [50s elapsed][0m[0m
[0m[1mtime_sleep.wait_30_seconds: Still creating... [20s elapsed][0m[0m
[0m[1maws_security_group.alb_sg_virginia: Creation complete after 3s [id=sg-020c2a930b6b78fe6][0m
[0m[1mmodule.alb_oregon.aws_lb_target_group.this: Creating...[0m[0m
[0m[1mmodule.alb_oregon.aws_lb_target_group.this: Creation complete after 3s [id=arn:aws:elasticloadbalancing:us-west-2:993407081893:targetgroup/tg-oregon/0e3ea073924c705f][0m
[0m[1mmodule.vpc_oregon.aws_route_table_association.public[0]: Creating...[0m[0m
[0m[1maws_security_group.lb_sg_virginia: Creation complete after 3s [id=sg-0b8960ae8b311cc3b][0m
[0m[1mmodule.vpc_oregon.aws_route_table_association.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_route_table_association.public[0]: Creation complete after 1s [id=rtbassoc-01e4fa3d0952d724a][0m
[0m[1mmodule.vpc_virginia.aws_route_table.public: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_route_table_association.public[1]: Creation complete after 1s [id=rtbassoc-00aab6e4558cef28b][0m
[0m[1mmodule.alb_virginia.aws_lb_target_group.this: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_route_table.public: Creation complete after 1s [id=rtb-04597ec2980c057f6][0m
[0m[1maws_instance.bastion_oregon: Creating...[0m[0m
[0m[1mmodule.alb_virginia.aws_lb_target_group.this: Creation complete after 2s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:targetgroup/tg-virginia/7495983d2383a1d1][0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Still creating... [20s elapsed][0m[0m
[0m[1maws_ec2_transit_gateway.virginia: Still creating... [1m0s elapsed][0m[0m
[0m[1mtime_sleep.wait_30_seconds: Still creating... [30s elapsed][0m[0m
[0m[1mtime_sleep.wait_30_seconds: Creation complete after 30s [id=2024-06-28T17:44:33Z][0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Creating...[0m[0m
[0m[1maws_instance.bastion_oregon: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Still creating... [30s elapsed][0m[0m
[0m[1maws_ec2_transit_gateway.virginia: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [10s elapsed][0m[0m
[0m[1maws_instance.bastion_oregon: Still creating... [20s elapsed][0m[0m
[0m[1maws_ec2_transit_gateway.virginia: Creation complete after 1m16s [id=tgw-0ce7e4ebefe9a637c][0m
[0m[1mmodule.alb_oregon.aws_lb.this: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [20s elapsed][0m[0m
[0m[1maws_instance.bastion_oregon: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Still creating... [50s elapsed][0m[0m
[0m[1maws_instance.bastion_oregon: Creation complete after 34s [id=i-0dc898b8e52eac05b][0m
[0m[1maws_instance.bastion_virginia: Creating...[0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Still creating... [1m0s elapsed][0m[0m
[0m[1maws_instance.bastion_virginia: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Still creating... [1m10s elapsed][0m[0m
[0m[1maws_instance.bastion_virginia: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Still creating... [1m20s elapsed][0m[0m
[0m[1maws_instance.bastion_virginia: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [1m0s elapsed][0m[0m
[0m[1maws_instance.bastion_virginia: Creation complete after 34s [id=i-0d84096ded9ae21e9][0m
[0m[1maws_lb.app_lb_virginia[0]: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_nat_gateway.nat[0]: Creation complete after 1m26s [id=nat-052b955f2e7298601][0m
[0m[1maws_lb.app_lb_virginia[1]: Creating...[0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [1m10s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [10s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [1m20s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [20s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [1m30s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [30s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [1m40s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.vpc_virginia.aws_nat_gateway.nat[0]: Creation complete after 1m47s [id=nat-00dfa9996a17d0c97][0m
[0m[1mmodule.vpc_virginia.aws_route_table_association.public[0]: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_route_table_association.public[0]: Creation complete after 1s [id=rtbassoc-04568207fd752d5e5][0m
[0m[1mmodule.vpc_virginia.aws_route_table_association.public[1]: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_route_table_association.public[1]: Creation complete after 1s [id=rtbassoc-07343056c50ead6ed][0m
[0m[1maws_ecs_task_definition.task_def_virginia[15]: Creating...[0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [40s elapsed][0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[15]: Creation complete after 0s [id=prod-task-def-16][0m
[0m[1maws_ecs_task_definition.task_def_virginia[5]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[5]: Creation complete after 1s [id=prod-task-def-6][0m
[0m[1maws_ecs_task_definition.task_def_virginia[8]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[8]: Creation complete after 0s [id=prod-task-def-9][0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [1m30s elapsed][0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[13]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[13]: Creation complete after 0s [id=prod-task-def-14][0m
[0m[1maws_ecs_task_definition.task_def_virginia[12]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[12]: Creation complete after 1s [id=prod-task-def-13][0m
[0m[1maws_ecs_task_definition.task_def_virginia[6]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[6]: Creation complete after 0s [id=prod-task-def-7][0m
[0m[1maws_ecs_task_definition.task_def_virginia[9]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[9]: Creation complete after 0s [id=prod-task-def-10][0m
[0m[1maws_ecs_task_definition.task_def_virginia[3]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[3]: Creation complete after 1s [id=prod-task-def-4][0m
[0m[1maws_ecs_task_definition.task_def_virginia[11]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[11]: Creation complete after 0s [id=prod-task-def-12][0m
[0m[1maws_ecs_task_definition.task_def_virginia[1]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[1]: Creation complete after 0s [id=prod-task-def-2][0m
[0m[1maws_ecs_task_definition.task_def_virginia[10]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[10]: Creation complete after 1s [id=prod-task-def-11][0m
[0m[1maws_ecs_task_definition.task_def_virginia[14]: Creating...[0m[0m
[0m[1mmodule.transit_gateway_oregon.aws_ec2_transit_gateway_vpc_attachment.this: Creation complete after 1m49s [id=tgw-attach-0987227850b0fee27][0m
[0m[1maws_ecs_task_definition.task_def_virginia[0]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[14]: Creation complete after 0s [id=prod-task-def-15][0m
[0m[1maws_ecs_task_definition.task_def_virginia[4]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[0]: Creation complete after 0s [id=prod-task-def-1][0m
[0m[1maws_ecs_task_definition.task_def_virginia[2]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[4]: Creation complete after 1s [id=prod-task-def-5][0m
[0m[1maws_ecs_task_definition.task_def_virginia[7]: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[2]: Creation complete after 1s [id=prod-task-def-3][0m
[0m[1mmodule.alb_virginia.aws_lb.this: Creating...[0m[0m
[0m[1maws_ecs_task_definition.task_def_virginia[7]: Creation complete after 0s [id=prod-task-def-8][0m
[0m[1mmodule.vpc_virginia.aws_route_table.private: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_route_table.private: Creation complete after 2s [id=rtb-005d9666bb4c4b935][0m
[0m[1mmodule.vpc_oregon.aws_route_table.private: Creating...[0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.vpc_oregon.aws_route_table.private: Creation complete after 1s [id=rtb-0e49dd9e1f827080f][0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Creating...[0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [10s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [10s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [20s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [20s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [30s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [30s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [40s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [40s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [2m20s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [50s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [50s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [2m30s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [1m0s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [1m0s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [2m40s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [1m10s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [1m10s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [2m50s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [1m20s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Still creating... [1m20s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Still creating... [3m0s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.transit_gateway_virginia.aws_ec2_transit_gateway_vpc_attachment.this: Creation complete after 1m27s [id=tgw-attach-0162f2c6d7b34cc79][0m
[0m[1mmodule.vpc_virginia.aws_route_table_association.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_route_table_association.private[1]: Creation complete after 1s [id=rtbassoc-0932d7a02560db108][0m
[0m[1mmodule.vpc_virginia.aws_route_table_association.private[0]: Creating...[0m[0m
[0m[1mmodule.alb_oregon.aws_lb.this: Creation complete after 3m5s [id=arn:aws:elasticloadbalancing:us-west-2:993407081893:loadbalancer/app/alb-oregon/33bf0eb13b68b70c][0m
[0m[1mmodule.vpc_oregon.aws_route_table_association.private[1]: Creating...[0m[0m
[0m[1mmodule.vpc_virginia.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-038a895de7c42e292][0m
[0m[1mmodule.vpc_oregon.aws_route_table_association.private[0]: Creating...[0m[0m
[0m[1mmodule.vpc_oregon.aws_route_table_association.private[1]: Creation complete after 2s [id=rtbassoc-06134023cbc861a7f][0m
[0m[1mmodule.vpc_oregon.aws_route_table_association.private[0]: Creation complete after 1s [id=rtbassoc-0623e32033c72450e][0m
[0m[1mmodule.alb_oregon.aws_lb_listener.https: Creating...[0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [2m20s elapsed][0m[0m
[0m[1mmodule.alb_oregon.aws_lb_listener.https: Creation complete after 0s [id=arn:aws:elasticloadbalancing:us-west-2:993407081893:listener/app/alb-oregon/33bf0eb13b68b70c/51821c3cd7942b12][0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Creating...[0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [2m20s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [1m40s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [2m30s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [10s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [2m30s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [1m50s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [2m40s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [20s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [2m40s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [2m0s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Still creating... [2m50s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [30s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [2m50s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[0]: Creation complete after 2m55s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:loadbalancer/app/prod-app-lb-virginia-1/1a993b566d8d25dd][0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [2m10s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [40s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Still creating... [3m0s elapsed][0m[0m
[0m[1maws_lb.app_lb_virginia[1]: Creation complete after 3m4s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:loadbalancer/app/prod-app-lb-virginia-2/46af0cec7d3bc03a][0m
[0m[1maws_lb_target_group.app_tg_virginia[0]: Creating...[0m[0m
[0m[1maws_lb_target_group.app_tg_virginia[1]: Creating...[0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [2m20s elapsed][0m[0m
[0m[1maws_lb_target_group.app_tg_virginia[1]: Creation complete after 2s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:targetgroup/prod-app-tg-virginia2/416bb6b22f763ada][0m
[0m[1maws_lb_target_group.app_tg_virginia[0]: Creation complete after 2s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:targetgroup/prod-app-tg-virginia1/1a9ef4a83757edd8][0m
[0m[1maws_ecs_service.ecs_service_virginia[11]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[7]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[14]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[3]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[1]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[0]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[12]: Creating...[0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [50s elapsed][0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[13]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[2]: Creating...[0m[0m
[0m[1maws_lb_listener.https_listener_virginia[0]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[5]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[4]: Creating...[0m[0m
[0m[1maws_lb_listener.https_listener_virginia[0]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:listener/app/prod-app-lb-virginia-1/1a993b566d8d25dd/0b55c9b292f9fb65][0m
[0m[1maws_lb_listener.https_listener_virginia[1]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[15]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[8]: Creating...[0m[0m
[0m[1maws_lb_listener.https_listener_virginia[1]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:listener/app/prod-app-lb-virginia-2/46af0cec7d3bc03a/a5f90772692d2178][0m
[0m[1maws_ecs_service.ecs_service_virginia[9]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[6]: Creating...[0m[0m
[0m[1maws_ecs_service.ecs_service_virginia[10]: Creating...[0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [2m30s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [2m40s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Still creating... [2m50s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.alb_virginia.aws_lb.this: Creation complete after 2m55s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:loadbalancer/app/alb-virginia/23cf8a62e3527162][0m
[0m[1mmodule.alb_virginia.aws_lb_listener.https: Creating...[0m[0m
[0m[1mmodule.alb_virginia.aws_lb_listener.https: Creation complete after 0s [id=arn:aws:elasticloadbalancing:us-east-1:993407081893:listener/app/alb-virginia/23cf8a62e3527162/2cb5c737dd2ff3b7][0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_virginia: Creating...[0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_virginia: Creation complete after 4s [id=arn:aws:wafv2:us-east-1:993407081893:regional/webacl/alb-web-acl-virginia/5de043cf-1da5-42fe-b0ff-68fdbe88c2fb,arn:aws:elasticloadbalancing:us-east-1:993407081893:loadbalancer/app/alb-virginia/23cf8a62e3527162][0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [1m30s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [1m40s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [1m50s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [2m0s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [2m10s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [2m20s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [2m30s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [2m40s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [2m50s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [3m0s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Still creating... [3m10s elapsed][0m[0m
[0m[1maws_wafv2_web_acl_association.web_acl_association_oregon: Creation complete after 3m11s [id=arn:aws:wafv2:us-west-2:993407081893:regional/webacl/alb-web-acl-oregon/ce3d02e2-281d-4632-b2ea-10778f628698,arn:aws:elasticloadbalancing:us-west-2:993407081893:loadbalancer/app/alb-oregon/33bf0eb13b68b70c][0m
